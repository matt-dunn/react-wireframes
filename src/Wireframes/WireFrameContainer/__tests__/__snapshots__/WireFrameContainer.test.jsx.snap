// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Wireframe: WireFrameContainer should highlight annotation 1`] = `
.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-16 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-16 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-16.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-16.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-14 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-12 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-12 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-12 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 1;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  background-color: transparent;
  border: none;
  padding: 0 0 0 0.25em;
  color: inherit;
}

.emotion-10 {
  overflow: auto;
  font-size: 0.85rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.emotion-10 li {
  padding: 6px 0;
  border-bottom: 1px solid #ccc;
}

.emotion-10 li:last-child {
  border-bottom: none;
}

.emotion-10 li.highlight {
  background-color: rgba(64,134,247,0.25);
}

.emotion-10 li header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0 10px;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-10 li header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-10 li article {
  padding: 0 10px;
}

.emotion-6 {
  border-radius: 2em;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  height: 2em;
  padding: 0.25em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-style: normal;
  font-weight: normal;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.8em;
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className="open"
    >
      <div
        className="open emotion-16 emotion-17"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-14 emotion-15"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-12 emotion-13"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={true}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={true}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireFrameAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireFrameAnnotationsClose>
                </header>
                <WireFrameAnnotationsNotes
                  components={
                    Array [
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 1,
                        "options": Object {
                          "description": "Test description 1",
                          "title": "Test component 1",
                        },
                      },
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 2,
                        "options": Object {
                          "description": "Test description 2",
                          "title": "Test component 2",
                        },
                      },
                    ]
                  }
                  highlightedNote={
                    Object {
                      "Component": [MockFunction],
                      "count": 1,
                      "id": 1,
                      "options": Object {
                        "description": "Test description 1",
                        "title": "Test component 1",
                      },
                    }
                  }
                >
                  <WireFrameAnnotationsNotesContainer
                    id="wf-annotations"
                  >
                    <ul
                      className="emotion-10 emotion-11"
                      id="wf-annotations"
                    >
                      <li
                        className="highlight"
                        id="wf-annotation-1"
                        key="1"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              1
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 1
                          </h2>
                        </header>
                        <article>
                          Test description 1
                        </article>
                      </li>
                      <li
                        className=""
                        id="wf-annotation-2"
                        key="2"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              2
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 2
                          </h2>
                        </header>
                        <article>
                          Test description 2
                        </article>
                      </li>
                    </ul>
                  </WireFrameAnnotationsNotesContainer>
                </WireFrameAnnotationsNotes>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

exports[`Wireframe: WireFrameContainer should highlight annotation 2`] = `
.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-16 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-16 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-16.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-16.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-14 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-12 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-12 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-12 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 1;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  background-color: transparent;
  border: none;
  padding: 0 0 0 0.25em;
  color: inherit;
}

.emotion-10 {
  overflow: auto;
  font-size: 0.85rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.emotion-10 li {
  padding: 6px 0;
  border-bottom: 1px solid #ccc;
}

.emotion-10 li:last-child {
  border-bottom: none;
}

.emotion-10 li.highlight {
  background-color: rgba(64,134,247,0.25);
}

.emotion-10 li header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0 10px;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-10 li header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-10 li article {
  padding: 0 10px;
}

.emotion-6 {
  border-radius: 2em;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  height: 2em;
  padding: 0.25em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-style: normal;
  font-weight: normal;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.8em;
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className="open"
    >
      <div
        className="open emotion-16 emotion-17"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-14 emotion-15"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-12 emotion-13"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={true}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={true}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireFrameAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireFrameAnnotationsClose>
                </header>
                <WireFrameAnnotationsNotes
                  components={
                    Array [
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 1,
                        "options": Object {
                          "description": "Test description 1",
                          "title": "Test component 1",
                        },
                      },
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 2,
                        "options": Object {
                          "description": "Test description 2",
                          "title": "Test component 2",
                        },
                      },
                    ]
                  }
                  highlightedNote={
                    Object {
                      "Component": [MockFunction],
                      "count": 1,
                      "id": 2,
                      "options": Object {
                        "description": "Test description 2",
                        "title": "Test component 2",
                      },
                    }
                  }
                >
                  <WireFrameAnnotationsNotesContainer
                    id="wf-annotations"
                  >
                    <ul
                      className="emotion-10 emotion-11"
                      id="wf-annotations"
                    >
                      <li
                        className=""
                        id="wf-annotation-1"
                        key="1"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              1
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 1
                          </h2>
                        </header>
                        <article>
                          Test description 1
                        </article>
                      </li>
                      <li
                        className="highlight"
                        id="wf-annotation-2"
                        key="2"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              2
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 2
                          </h2>
                        </header>
                        <article>
                          Test description 2
                        </article>
                      </li>
                    </ul>
                  </WireFrameAnnotationsNotesContainer>
                </WireFrameAnnotationsNotes>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

exports[`Wireframe: WireFrameContainer should render children with annotation options and wireframe components when open 1`] = `
.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-16 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-16 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-16.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-16.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-14 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-12 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-12 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-12 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 1;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  background-color: transparent;
  border: none;
  padding: 0 0 0 0.25em;
  color: inherit;
}

.emotion-10 {
  overflow: auto;
  font-size: 0.85rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.emotion-10 li {
  padding: 6px 0;
  border-bottom: 1px solid #ccc;
}

.emotion-10 li:last-child {
  border-bottom: none;
}

.emotion-10 li.highlight {
  background-color: rgba(64,134,247,0.25);
}

.emotion-10 li header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0 10px;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-10 li header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-10 li article {
  padding: 0 10px;
}

.emotion-6 {
  border-radius: 2em;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  height: 2em;
  padding: 0.25em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-style: normal;
  font-weight: normal;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.8em;
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className="open"
    >
      <div
        className="open emotion-16 emotion-17"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-14 emotion-15"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-12 emotion-13"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={true}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={true}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireFrameAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireFrameAnnotationsClose>
                </header>
                <WireFrameAnnotationsNotes
                  components={
                    Array [
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 1,
                        "options": Object {
                          "description": "Test description 1",
                          "title": "Test component 1",
                        },
                      },
                      Object {
                        "Component": [MockFunction],
                        "count": 1,
                        "id": 2,
                        "options": Object {
                          "description": "Test description 2",
                          "title": "Test component 2",
                        },
                      },
                    ]
                  }
                >
                  <WireFrameAnnotationsNotesContainer
                    id="wf-annotations"
                  >
                    <ul
                      className="emotion-10 emotion-11"
                      id="wf-annotations"
                    >
                      <li
                        className=""
                        id="wf-annotation-1"
                        key="1"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              1
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 1
                          </h2>
                        </header>
                        <article>
                          Test description 1
                        </article>
                      </li>
                      <li
                        className=""
                        id="wf-annotation-2"
                        key="2"
                      >
                        <header>
                          <IdentifierNote>
                            <cite
                              className="emotion-6 emotion-7"
                            >
                              2
                            </cite>
                          </IdentifierNote>
                          <h2>
                            Test component 2
                          </h2>
                        </header>
                        <article>
                          Test description 2
                        </article>
                      </li>
                    </ul>
                  </WireFrameAnnotationsNotesContainer>
                </WireFrameAnnotationsNotes>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

exports[`Wireframe: WireFrameContainer should render children with annotation options but no wireframe components when closed 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-8 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 0.25;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className=""
    >
      <div
        className=" emotion-8 emotion-9"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={false}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={false}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

exports[`Wireframe: WireFrameContainer should render children with annotation options but no wireframe components when toggle closed 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-8 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 0.25;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className=""
    >
      <div
        className=" emotion-8 emotion-9"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={false}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={false}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

exports[`Wireframe: WireFrameContainer should render children with no wireframe components 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-8 [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  font-size: 1.25em;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  padding: 0.25em;
  border-radius: 0.25em 0 0 0.25em;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  min-height: 3em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  opacity: 0.25;
}

.emotion-2:hover {
  opacity: 1;
}

.emotion-2 span {
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireFrameProvider
  api={
    Object {
      "getComponents": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireFrameContainer
    defaultOpen={false}
  >
    <WireFrameMainContainer
      className=""
    >
      <div
        className=" emotion-8 emotion-9"
      >
        <WireFrameBody>
          <div
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </div>
        </WireFrameBody>
        <WireFrameAnnotationsContainer
          data-annotations-container={true}
        >
          <div
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireFrameAnnotations
              data-annotations={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireFrameAnnotationsToggle
                  aria-label="Toggle annotations"
                  onClick={[Function]}
                  open={false}
                >
                  <div
                    aria-label="Toggle annotations"
                    className="emotion-2 emotion-3"
                    onClick={[Function]}
                    open={false}
                  >
                    <span>
                      →
                    </span>
                  </div>
                </WireFrameAnnotationsToggle>
              </div>
            </WireFrameAnnotations>
          </div>
        </WireFrameAnnotationsContainer>
      </div>
    </WireFrameMainContainer>
  </WireFrameContainer>
</WireFrameProvider>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Wireframe: WireframeContainer should default to open 1`] = `
.emotion-14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-14 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-14 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-14.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-14.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-12 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-10 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-10 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-10 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0 0 0 0.25em;
  color: inherit;
}

.emotion-8 {
  overflow: auto;
  z-index: 1;
  position: relative;
  background-color: inherit;
}

.emotion-6 {
  padding: 20px;
  text-align: center;
  color: #888;
  font-size: 2rem;
  font-weight: lighter;
  line-height: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer>
    <WireframeMainContainer
      className="open"
      data-test="container"
    >
      <div
        className="open emotion-14 emotion-15"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-12 emotion-13"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-10 emotion-11"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={true}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={true}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireframeAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireframeAnnotationsClose>
                </header>
                <WireframeAnnotationNotesContainer>
                  <div
                    className="emotion-8 emotion-9"
                  >
                    <WireframeAnnotationNotes>
                      <NoAnnotations>
                        <div
                          className="emotion-6 emotion-7"
                        >
                          No annotations on this page
                        </div>
                      </NoAnnotations>
                    </WireframeAnnotationNotes>
                  </div>
                </WireframeAnnotationNotesContainer>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should highlight annotation 1`] = `
.emotion-32 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-32 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-32 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-32.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-32.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-30 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-28 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-28 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-28 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0 0 0 0.25em;
  color: inherit;
}

.emotion-26 {
  overflow: auto;
  z-index: 1;
  position: relative;
  background-color: inherit;
}

.emotion-24 {
  list-style: none;
  margin: 0;
  padding: 0;
  outline: none;
}

.emotion-24 > li:not(:last-child) {
  border-bottom: 1px solid #ccc;
}

.emotion-22 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
}

.emotion-22 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-22 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-9 {
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-7 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-13 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
  background-color: rgba(64,134,247,0.25);
}

.emotion-13 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-13 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "Component": [MockFunction],
              "count": 1,
              "id": 1,
              "options": Object {
                "description": "Test description 1",
                "title": "Test component 1",
              },
            },
            .emotion-1 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-3 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
  background-color: rgba(64,134,247,0.25);
}

.emotion-3 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-3 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

<li
              data-annotation-id="1"
              data-highlighted="true"
            >
              <article
                class="emotion-3 emotion-4"
              >
                <header>
                  <cite
                    class="emotion-0 emotion-1 emotion-2"
                    data-annotation-identifier="true"
                  >
                    1
                  </cite>
                  <h2>
                    Test component 1
                  </h2>
                </header>
                <article>
                  Test description 1
                </article>
              </article>
            </li>,
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <WireframeMainContainer
      className="open"
      data-test="container"
    >
      <div
        className="open emotion-32 emotion-33"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-30 emotion-31"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-28 emotion-29"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={true}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={true}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireframeAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireframeAnnotationsClose>
                </header>
                <WireframeAnnotationNotesContainer>
                  <div
                    className="emotion-26 emotion-27"
                  >
                    <WireframeAnnotationNotes
                      annotations={
                        Array [
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 1,
                            "options": Object {
                              "description": "Test description 1",
                              "title": "Test component 1",
                            },
                          },
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 2,
                            "options": Object {
                              "description": "Test description 2",
                              "title": "Test component 2",
                            },
                          },
                        ]
                      }
                      highlightedNote={
                        Object {
                          "Component": [MockFunction],
                          "count": 1,
                          "id": 1,
                          "options": Object {
                            "description": "Test description 1",
                            "title": "Test component 1",
                          },
                        }
                      }
                    >
                      <WireframeAnnotationNotesContainer
                        tabIndex={0}
                      >
                        <ul
                          className="emotion-24 emotion-25"
                          tabIndex={0}
                        >
                          <li
                            data-annotation-id={1}
                            data-highlighted={true}
                            key="1"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 1,
                                  "options": Object {
                                    "description": "Test description 1",
                                    "title": "Test component 1",
                                  },
                                }
                              }
                              isHighlighted={true}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={true}
                              >
                                <article
                                  className="emotion-13 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 1,
                                          "options": Object {
                                            "description": "Test description 1",
                                            "title": "Test component 1",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 1,
                                            "options": Object {
                                              "description": "Test description 1",
                                              "title": "Test component 1",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            1
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 1
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 1
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                          <li
                            data-annotation-id={2}
                            data-highlighted={false}
                            key="2"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 2,
                                  "options": Object {
                                    "description": "Test description 2",
                                    "title": "Test component 2",
                                  },
                                }
                              }
                              isHighlighted={false}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={false}
                              >
                                <article
                                  className="emotion-22 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 2,
                                          "options": Object {
                                            "description": "Test description 2",
                                            "title": "Test component 2",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 2,
                                            "options": Object {
                                              "description": "Test description 2",
                                              "title": "Test component 2",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            2
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 2
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 2
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                        </ul>
                      </WireframeAnnotationNotesContainer>
                    </WireframeAnnotationNotes>
                  </div>
                </WireframeAnnotationNotesContainer>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should highlight annotation 2`] = `
.emotion-32 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-32 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-32 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-32.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-32.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-30 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-28 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-28 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-28 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0 0 0 0.25em;
  color: inherit;
}

.emotion-26 {
  overflow: auto;
  z-index: 1;
  position: relative;
  background-color: inherit;
}

.emotion-24 {
  list-style: none;
  margin: 0;
  padding: 0;
  outline: none;
}

.emotion-24 > li:not(:last-child) {
  border-bottom: 1px solid #ccc;
}

.emotion-13 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
}

.emotion-13 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-13 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-9 {
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-7 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-22 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
  background-color: rgba(64,134,247,0.25);
}

.emotion-22 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-22 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "Component": [MockFunction],
              "count": 1,
              "id": 1,
              "options": Object {
                "description": "Test description 1",
                "title": "Test component 1",
              },
            },
            .emotion-3 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
}

.emotion-3 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-3 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-1 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

<li
              data-annotation-id="1"
              data-highlighted="false"
            >
              <article
                class="emotion-3 emotion-4"
              >
                <header>
                  <cite
                    class="emotion-0 emotion-1 emotion-2"
                    data-annotation-identifier="true"
                  >
                    1
                  </cite>
                  <h2>
                    Test component 1
                  </h2>
                </header>
                <article>
                  Test description 1
                </article>
              </article>
            </li>,
          ],
          Array [
            Object {
              "Component": [MockFunction],
              "count": 1,
              "id": 2,
              "options": Object {
                "description": "Test description 2",
                "title": "Test component 2",
              },
            },
            .emotion-1 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-3 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
  background-color: rgba(64,134,247,0.25);
}

.emotion-3 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-3 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

<li
              data-annotation-id="2"
              data-highlighted="true"
            >
              <article
                class="emotion-3 emotion-4"
              >
                <header>
                  <cite
                    class="emotion-0 emotion-1 emotion-2"
                    data-annotation-identifier="true"
                  >
                    2
                  </cite>
                  <h2>
                    Test component 2
                  </h2>
                </header>
                <article>
                  Test description 2
                </article>
              </article>
            </li>,
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <WireframeMainContainer
      className="open"
      data-test="container"
    >
      <div
        className="open emotion-32 emotion-33"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-30 emotion-31"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-28 emotion-29"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={true}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={true}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireframeAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireframeAnnotationsClose>
                </header>
                <WireframeAnnotationNotesContainer>
                  <div
                    className="emotion-26 emotion-27"
                  >
                    <WireframeAnnotationNotes
                      annotations={
                        Array [
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 1,
                            "options": Object {
                              "description": "Test description 1",
                              "title": "Test component 1",
                            },
                          },
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 2,
                            "options": Object {
                              "description": "Test description 2",
                              "title": "Test component 2",
                            },
                          },
                        ]
                      }
                      highlightedNote={
                        Object {
                          "Component": [MockFunction],
                          "count": 1,
                          "id": 2,
                          "options": Object {
                            "description": "Test description 2",
                            "title": "Test component 2",
                          },
                        }
                      }
                    >
                      <WireframeAnnotationNotesContainer
                        tabIndex={0}
                      >
                        <ul
                          className="emotion-24 emotion-25"
                          tabIndex={0}
                        >
                          <li
                            data-annotation-id={1}
                            data-highlighted={false}
                            key="1"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 1,
                                  "options": Object {
                                    "description": "Test description 1",
                                    "title": "Test component 1",
                                  },
                                }
                              }
                              isHighlighted={false}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={false}
                              >
                                <article
                                  className="emotion-13 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 1,
                                          "options": Object {
                                            "description": "Test description 1",
                                            "title": "Test component 1",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 1,
                                            "options": Object {
                                              "description": "Test description 1",
                                              "title": "Test component 1",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            1
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 1
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 1
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                          <li
                            data-annotation-id={2}
                            data-highlighted={true}
                            key="2"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 2,
                                  "options": Object {
                                    "description": "Test description 2",
                                    "title": "Test component 2",
                                  },
                                }
                              }
                              isHighlighted={true}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={true}
                              >
                                <article
                                  className="emotion-22 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 2,
                                          "options": Object {
                                            "description": "Test description 2",
                                            "title": "Test component 2",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 2,
                                            "options": Object {
                                              "description": "Test description 2",
                                              "title": "Test component 2",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            2
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 2
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 2
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                        </ul>
                      </WireframeAnnotationNotesContainer>
                    </WireframeAnnotationNotes>
                  </div>
                </WireframeAnnotationNotesContainer>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should render children with annotation options and wireframe components when open 1`] = `
.emotion-32 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-32 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-32 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-32.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-32.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-30 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-28 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-28 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-28 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  cursor: pointer;
  line-height: 1;
  font-size: 1.5em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0 0 0 0.25em;
  color: inherit;
}

.emotion-26 {
  overflow: auto;
  z-index: 1;
  position: relative;
  background-color: inherit;
}

.emotion-24 {
  list-style: none;
  margin: 0;
  padding: 0;
  outline: none;
}

.emotion-24 > li:not(:last-child) {
  border-bottom: 1px solid #ccc;
}

.emotion-13 {
  font-size: 0.85rem;
  word-break: break-word;
  padding: 6px 10px;
}

.emotion-13 > header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-13 > header h2 {
  font-size: 1.2rem;
  margin: 0;
  font-weight: normal;
}

.emotion-9 {
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.emotion-7 {
  all: initial;
  box-sizing: border-box;
  line-height: 1;
  border-radius: 2em;
  color: #333;
  background-color: yellow;
  border-color: #caca00;
  white-space: nowrap;
  min-width: 2em;
  max-width: initial;
  min-height: auto;
  max-height: initial;
  height: 2em;
  padding: 0.25em 0.5em;
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: initial;
  overflow: visible;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: none;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 0.5em;
  border-width: 1px;
  border-style: solid;
  font-size: 0.75rem;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={[MockFunction]}
  >
    <WireframeMainContainer
      className="open"
      data-test="container"
    >
      <div
        className="open emotion-32 emotion-33"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-30 emotion-31"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-28 emotion-29"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={true}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={true}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
                <header
                  className="annotations"
                >
                  <h1>
                    Annotations
                  </h1>
                  <WireframeAnnotationsClose
                    aria-label="Close annotations"
                    onClick={[Function]}
                  >
                    <button
                      aria-label="Close annotations"
                      className="emotion-4 emotion-5"
                      onClick={[Function]}
                    >
                      ×
                    </button>
                  </WireframeAnnotationsClose>
                </header>
                <WireframeAnnotationNotesContainer>
                  <div
                    className="emotion-26 emotion-27"
                  >
                    <WireframeAnnotationNotes
                      annotations={
                        Array [
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 1,
                            "options": Object {
                              "description": "Test description 1",
                              "title": "Test component 1",
                            },
                          },
                          Object {
                            "Component": [MockFunction],
                            "count": 1,
                            "id": 2,
                            "options": Object {
                              "description": "Test description 2",
                              "title": "Test component 2",
                            },
                          },
                        ]
                      }
                    >
                      <WireframeAnnotationNotesContainer
                        tabIndex={0}
                      >
                        <ul
                          className="emotion-24 emotion-25"
                          tabIndex={0}
                        >
                          <li
                            data-annotation-id={1}
                            data-highlighted={false}
                            key="1"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 1,
                                  "options": Object {
                                    "description": "Test description 1",
                                    "title": "Test component 1",
                                  },
                                }
                              }
                              isHighlighted={false}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={false}
                              >
                                <article
                                  className="emotion-13 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 1,
                                          "options": Object {
                                            "description": "Test description 1",
                                            "title": "Test component 1",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 1,
                                            "options": Object {
                                              "description": "Test description 1",
                                              "title": "Test component 1",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            1
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 1
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 1
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                          <li
                            data-annotation-id={2}
                            data-highlighted={false}
                            key="2"
                          >
                            <WireframeAnnotationNote
                              annotation={
                                Object {
                                  "Component": [MockFunction],
                                  "count": 1,
                                  "id": 2,
                                  "options": Object {
                                    "description": "Test description 2",
                                    "title": "Test component 2",
                                  },
                                }
                              }
                              isHighlighted={false}
                            >
                              <WireframeAnnotationsNoteContainer
                                isHighlighted={false}
                              >
                                <article
                                  className="emotion-13 emotion-14"
                                >
                                  <header>
                                    <IdentifierNote
                                      annotation={
                                        Object {
                                          "Component": [MockFunction],
                                          "count": 1,
                                          "id": 2,
                                          "options": Object {
                                            "description": "Test description 2",
                                            "title": "Test component 2",
                                          },
                                        }
                                      }
                                    >
                                      <Identifier
                                        annotation={
                                          Object {
                                            "Component": [MockFunction],
                                            "count": 1,
                                            "id": 2,
                                            "options": Object {
                                              "description": "Test description 2",
                                              "title": "Test component 2",
                                            },
                                          }
                                        }
                                        className="emotion-9 emotion-6"
                                      >
                                        <IdentifierContainer
                                          className="emotion-9 emotion-6"
                                          data-annotation-identifier={true}
                                        >
                                          <cite
                                            className="emotion-6 emotion-7 emotion-8"
                                            data-annotation-identifier={true}
                                          >
                                            2
                                          </cite>
                                        </IdentifierContainer>
                                      </Identifier>
                                    </IdentifierNote>
                                    <h2>
                                      Test component 2
                                    </h2>
                                  </header>
                                  <article>
                                    Test description 2
                                  </article>
                                </article>
                              </WireframeAnnotationsNoteContainer>
                            </WireframeAnnotationNote>
                          </li>
                        </ul>
                      </WireframeAnnotationNotesContainer>
                    </WireframeAnnotationNotes>
                  </div>
                </WireframeAnnotationNotesContainer>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should render children with annotation options but no wireframe components when close option is used 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-8 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0.25;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={[MockFunction]}
  >
    <WireframeMainContainer
      className=""
      data-test="container"
    >
      <div
        className=" emotion-8 emotion-9"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={false}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={false}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should render children with annotation options but no wireframe components when closed 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-8 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0.25;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={[MockFunction]}
  >
    <WireframeMainContainer
      className=""
      data-test="container"
    >
      <div
        className=" emotion-8 emotion-9"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={false}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={false}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should render children with annotation options but no wireframe components when toggle closed 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-8 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0.25;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={[MockFunction]}
  >
    <WireframeMainContainer
      className=""
      data-test="container"
    >
      <div
        className=" emotion-8 emotion-9"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={false}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={false}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;

exports[`Wireframe: WireframeContainer should render children with no wireframe components 1`] = `
.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
}

.emotion-8 > [data-annotations-container] {
  width: 0;
  min-width: 0;
}

.emotion-8 > [data-annotations-container] [data-annotations] {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

.emotion-8.open > [data-annotations-container] {
  width: 25%;
  min-width: 250px;
}

.emotion-8.open > [data-annotations-container] > [data-annotations] {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-6 {
  all: initial;
  font-family: inherit;
  line-height: 1.5;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 400px;
  padding: 0;
  -webkit-transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  transition: width 250ms ease-in-out,min-width 250ms ease-in-out;
  position: relative;
}

.emotion-4 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-left: 2px solid #555;
  padding: 0;
  width: 25%;
  max-width: 400px;
  min-width: 250px;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #fafafa;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  z-index: 6000;
  position: absolute;
  position: fixed;
}

.emotion-4 header.annotations {
  padding: 0.1em 0.75em;
  background-color: #555;
  color: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-4 header.annotations h1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-size: 1.5em;
  margin: 0;
  line-height: 1.5;
  font-weight: lighter;
}

.emotion-2 {
  margin: 0;
  padding: 0;
  position: absolute;
  left: 0;
  top: 50%;
  background-color: #555;
  color: #fff;
  border: none;
  border-radius: 0.5rem 0 0 0.5rem;
  -webkit-transform: translate(-100%,-50%);
  -ms-transform: translate(-100%,-50%);
  transform: translate(-100%,-50%);
  -webkit-transition: opacity 100ms;
  transition: opacity 100ms;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0.25;
  font-size: 1rem;
  min-height: 3.5em;
}

.emotion-2:active,
.emotion-2:focus,
.emotion-2:hover {
  outline: none;
  opacity: 1;
}

.emotion-2 span {
  all: initial;
  cursor: pointer;
  color: inherit;
  padding: 0.25em;
  font-size: 1.25em;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-weight: bold;
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
  display: block;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

<WireframeProvider
  api={
    Object {
      "getAnnotations": [Function],
      "highlightNote": [Function],
      "isOpen": [Function],
      "onOpen": [Function],
      "register": [Function],
      "setOpen": [Function],
      "setOptions": [Function],
      "unregister": [Function],
    }
  }
>
  <WireframeContainer
    defaultOpen={false}
    onHighlightAnnotation={[MockFunction]}
  >
    <WireframeMainContainer
      className=""
      data-test="container"
    >
      <div
        className=" emotion-8 emotion-9"
        data-test="container"
      >
        <WireframeBody>
          <main
            className="emotion-0 emotion-1"
          >
            <div>
              Child component 1
            </div>
            <div>
              Child component 2
            </div>
          </main>
        </WireframeBody>
        <WireframeAnnotationsContainer
          data-annotations-container={true}
        >
          <section
            className="emotion-6 emotion-7"
            data-annotations-container={true}
          >
            <WireframeAnnotationsWrapper
              data-annotations={true}
              fixed={true}
            >
              <div
                className="emotion-4 emotion-5"
                data-annotations={true}
              >
                <WireframeAnnotationsToggle
                  data-test="toggle"
                  onClick={[Function]}
                  open={false}
                  title="Toggle annotations"
                >
                  <button
                    className="emotion-2 emotion-3"
                    data-test="toggle"
                    onClick={[Function]}
                    open={false}
                    title="Toggle annotations"
                  >
                    <span>
                      →
                    </span>
                  </button>
                </WireframeAnnotationsToggle>
              </div>
            </WireframeAnnotationsWrapper>
          </section>
        </WireframeAnnotationsContainer>
      </div>
    </WireframeMainContainer>
  </WireframeContainer>
</WireframeProvider>
`;
